Index: src_2/tempCodeRunnerFile.java
===================================================================
diff --git a/src_2/tempCodeRunnerFile.java b/src_2/tempCodeRunnerFile.java
deleted file mode 100644
--- a/src_2/tempCodeRunnerFile.java	
+++ /dev/null	
@@ -1,1 +0,0 @@
-        res.displayOption();
Index: src_2/Programme.java
===================================================================
diff --git a/src_2/Programme.java b/src_2/Programme.java
deleted file mode 100644
--- a/src_2/Programme.java	
+++ /dev/null	
@@ -1,36 +0,0 @@
-// ProgrammeInfo is part of Composition.
-// Definition : Composition Like Aggregation but the owned object is not
-// independent from the owner which means by deleting owner the owned object
-// will also be deleted.
-
-public class Programme {
-    public String programmeId;
-    public String programmeName;
-
-    public Programme(String programmeId, String programmeName) {
-        this.programmeId = programmeId;
-        this.programmeName = programmeName;
-    }
-
-    @Override
-    public String toString() {
-        return "Programme [programmeId=" + programmeId + ", programmeName=" + programmeName;
-    }
-
-    public String getProgrammeId() {
-        return programmeId;
-    }
-
-    public void setProgrammeId(String programmeId) {
-        this.programmeId = programmeId;
-    }
-
-    public String getProgrammeName() {
-        return programmeName;
-    }
-
-    public void setProgrammeName(String programmeName) {
-        this.programmeName = programmeName;
-    }
-
-}
Index: src_2/Main.java
===================================================================
diff --git a/src_2/Main.java b/src_2/Main.java
deleted file mode 100644
--- a/src_2/Main.java	
+++ /dev/null	
@@ -1,26 +0,0 @@
-import java.util.Scanner;
-
-public class Main {
-
-    public static void main(String[] args) {
-        Registration res = new Registration();
-        try (Scanner input = new Scanner(System.in)) {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== MULTIMEDIA UNVERSITY =====");
-            System.out.println("\n(1) STUDENT PORTAL");
-            System.out.println("(2) ADMIN PORTAL");
-            System.out.println("(3) MMU PORTAL");
-
-            System.out.print("\nChoose 1 : ");
-            int selection = input.nextInt();
-            if (selection == 1) {
-                res.displayStudentPortal();
-            } else if (selection == 2) {
-                // adminPortal
-            } else if (selection == 3) {
-                // mmuPortal
-            }
-        }
-
-    }
-}
Index: src_2/MediumStudy.java
===================================================================
diff --git a/src_2/MediumStudy.java b/src_2/MediumStudy.java
deleted file mode 100644
--- a/src_2/MediumStudy.java	
+++ /dev/null	
@@ -1,7 +0,0 @@
-public enum MediumStudy {
-    FOUNDATION,
-    DIPLOMA,
-    UNDERGRADUATE,
-    POSTGRADUATE,
-    PHD;
-}
Index: src_2/Registration.java
===================================================================
diff --git a/src_2/Registration.java b/src_2/Registration.java
deleted file mode 100644
--- a/src_2/Registration.java	
+++ /dev/null	
@@ -1,329 +0,0 @@
-import java.util.*;
-
-public class Registration {
-
-        String username, password, emailAddress;
-        int phoneNumber;
-
-        AddressInfo theAddress = new AddressInfo();
-        List<Student> listOfUsers = new ArrayList<>();
-        Student loggedInUser = null;
-        Scanner input = new Scanner(System.in);
-
-        // Student student = new Student("JohnDoe", 12345);
-        Course course = new Course("ODN3329", "Foundation in Arts ",
-                        new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                        120,
-                        new String[] { "Masters in Computer Science",
-                                        "MBA in IT" },
-                        new String[] { "hello" },
-                        true, 14, 120, MediumOfStudy.FOUNDATION);
-
-        public void displayStudentPortal() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("===== WELCOME TO STUDENT PORTAL =====");
-                System.out.println("\n(1) LOGIN");
-                System.out.println("(2) REGISTER");
-
-                System.out.print("\nChoose 1 : ");
-                int selection = input.nextInt();
-                if (selection == 1) {
-                        displayLogin();
-                } else if (selection == 2) {
-                        displayRegister();
-                }
-
-        }
-
-        public void displayLogin() {
-                System.out.print("\033[H\033[2J");
-
-                listOfUsers.add(new Student("uzair", "123"));
-                try (Scanner input = new Scanner(System.in)) {
-                        System.out.println("===== STUDENT LOGIN =====");
-                        System.out.print("\nEnter username: ");
-                        String inpUser = input.nextLine();
-                        System.out.print("Enter password: ");
-                        String inpPass = input.nextLine();
-
-                        // check if student is exist
-                        for (Student user : listOfUsers) {
-                                if (user.getUsername().equals(inpUser)) {
-                                        if (user.getPassword().equals(inpPass)) {
-                                                loggedInUser = user;
-                                                dashboard();
-                                                return;
-                                        }
-                                }
-                        }
-                        System.out.println("Invalid username/password combination\n");
-
-                }
-        }
-
-        public void displayRegister() {
-                System.out.print("\033[H\033[2J");
-                try (Scanner input = new Scanner(System.in)) {
-
-                        System.out.println("===== STUDENT REGISTRATION =====");
-                        System.out.print("\nEnter username      : ");
-                        String username = input.nextLine();
-
-                        System.out.print("Enter password      : ");
-                        password = input.nextLine();
-
-                        System.out.print("Enter email address : ");
-                        emailAddress = input.nextLine();
-
-                        System.out.print("Enter phone number  : ");
-                        phoneNumber = Integer.parseInt(input.nextLine());
-
-                        System.out.println("\n===== ADDRESS INFORMATION =====");
-                        System.out.print("\nEnter street     : ");
-                        String street = input.nextLine();
-                        theAddress.setStreet(street);
-
-                        System.out.print("Enter city       : ");
-                        String city = input.nextLine();
-                        theAddress.setCity(city);
-
-                        System.out.print("Enter state      : ");
-                        String state = input.nextLine();
-                        theAddress.setState(state);
-
-                        System.out.print("Enter postalCode : ");
-                        String postalCode = input.nextLine();
-                        theAddress.setPostalCode(postalCode);
-
-                        System.out.print("Enter country    : ");
-                        String country = input.nextLine();
-                        theAddress.setCountry(country);
-
-                        Student newStudent = new Student(username, password, emailAddress, phoneNumber, theAddress,
-                                        null,
-                                        emailAddress);
-                        listOfUsers.add(newStudent);
-
-                        displayStudentPortal();
-                } catch (NumberFormatException e) {
-                        e.printStackTrace();
-                }
-        }
-
-        public void dashboard() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("===== DASHBOARD =====");
-                System.out.println("Welcome " + loggedInUser.getUsername() + "!");
-
-                System.out.println("\n1. MANAGE PERSONAL INFORMATION");
-                System.out.println("2. VIEW ACADEMIC CREDENTIALS");
-                System.out.println("3. VIEW AVAILABLE COURSES");
-                System.out.println("4. VIEW SELECTED COURSES");
-                System.out.println("5. VIEW VIDEO BRIEFINGS");
-                System.out.println("6. LOGOUT");
-
-                System.out.print("\nChoose 1 : ");
-
-                int choice = 0;
-                try {
-                        choice = input.nextInt();
-                } catch (InputMismatchException e) {
-                        System.out.println("Invalid input, please enter a number.");
-                        dashboard();
-                        return;
-                }
-
-                switch (choice) {
-                        case 1:
-                                studentInformation();
-                                break;
-                        case 2:
-                                // academicCredential();
-                                break;
-                        case 3:
-                                displayCourseOffered();
-                                break;
-                        case 4:
-                                displaySelectedCourse();
-                                break;
-                        default:
-                                System.out.println("Invalid option, please try again.");
-                                dashboard();
-                                return;
-                }
-
-        }
-
-        public void studentInformation() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("===== STUDENT INFORMATION =====");
-                System.out.println("Student Name  : " + loggedInUser.getUsername());
-                System.out.println("Password      : " + loggedInUser.getPassword());
-                System.out.println("Student ID    : " + loggedInUser.getStudentId());
-                System.out.println("Email Address : " + loggedInUser.getEmailAddress());
-                System.out.println("Phone Number  : " + loggedInUser.getPhoneNumber());
-                // System.out.println("Faculty : " + loggedInUser.getFaculty());
-
-                System.out.println("\n===== STUDENT ADDRESS INFORMATION =====");
-                System.out.println("Street       : " + loggedInUser.getAddressInfo().getStreet());
-                System.out.println("City         : " + loggedInUser.getAddressInfo().getCity());
-                System.out.println("State        : " + loggedInUser.getAddressInfo().getState());
-                System.out.println("Postal Code  : " + loggedInUser.getAddressInfo().getPostalCode());
-                System.out.println("Country      : " + loggedInUser.getAddressInfo().getCountry());
-
-                System.out.print("\nPress 0 to return : ");
-                int selection = input.nextInt();
-                if (selection == 0)
-                        dashboard();
-
-        }
-
-        public void displayCourseOffered() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("===== BROWSE THE PROGRAMMES =====\n");
-
-                // display all available course
-                Course courseList = new Course();
-                List<Course> courses = courseList.getAllCourses();
-
-                int i = 1;
-                for (Course course : courses) {
-                        System.out.println("(" + i + ") " + course.getCourseName());
-                        i++;
-                }
-
-                System.out.println("\n\n(1) ADD COURSE");
-                System.out.println("(2) DELETE COURSE");
-                System.out.println("(3) RETURN TO DASHBOARD");
-
-                System.out.print("\nChoose 1 : ");
-                int selection = input.nextInt();
-                if (selection == 1) {
-                        displayCourseSelection();
-                } else if (selection == 2) {
-                        unregisterFromCourse();
-                } else if (selection == 3) {
-                        dashboard();
-                }
-
-                System.out.print("\nChoose 1 : ");
-
-                int choice = 0;
-                try {
-                        choice = input.nextInt();
-                } catch (InputMismatchException e) {
-                        System.out.println("Invalid input, please enter a number.");
-                        dashboard();
-                        return;
-                }
-
-                switch (choice) {
-                        case 1:
-                                displayCourseSelection();
-                                break;
-                        case 2:
-                                unregisterFromCourse();
-                                break;
-                        case 3:
-                                dashboard();
-                                break;
-                        default:
-                                System.out.println("Invalid option, please try again.");
-                                dashboard();
-                                return;
-                }
-
-        }
-
-        public void displayCourseSelection() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("===== BROWSE THE PROGRAMMES =====\n");
-
-                // display all available course
-                Course courseList = new Course();
-                List<Course> availableCourses = courseList.getAllCourses();
-
-                int i = 1;
-                for (Course course : availableCourses) {
-                        System.out.println("(" + i + ") " + course.getCourseName());
-                        i++;
-                }
-
-                System.out.print("\nSelect a course to register for : ");
-                int choice = input.nextInt();
-
-                Course selectedCourse = availableCourses.get(choice - 1);
-                loggedInUser.addCourse(selectedCourse);
-
-                System.out.println("\nYou have been registered to " + selectedCourse.getCourseName());
-
-                System.out.print("\nPress 0 to return : ");
-                int selection = input.nextInt();
-                if (selection == 0)
-                        displayCourseOffered();
-        }
-
-        public void unregisterFromCourse() {
-                System.out.print("\033[H\033[2J");
-
-                List<Course> registeredCourses = loggedInUser.getCourses();
-
-                System.out.println("=====  UNREGISTERED COURSES =====");
-
-                if (registeredCourses.isEmpty()) {
-                        System.out.println("You haven't registered for any courses yet.");
-                        return;
-                }
-
-                for (int i = 0; i < registeredCourses.size(); i++) {
-                        System.out.println("(" + (i + 1) + ") " + registeredCourses.get(i).getCourseName());
-                }
-
-                try (Scanner input = new Scanner(System.in)) {
-                        int choice = 0;
-                        System.out.print("\nSelect a course to unregister from :");
-                        choice = input.nextInt();
-                        if (choice > 0 && choice <= registeredCourses.size()) {
-                                Course courseToUnregister = registeredCourses.get(choice - 1);
-                                loggedInUser.removeCourse(courseToUnregister);
-                                System.out.println("You have been unregistered from "
-                                                + courseToUnregister.getCourseName());
-                                System.out.print("\nPress 0 to return : ");
-                                int selection = input.nextInt();
-                                if (selection == 0)
-                                        displayCourseOffered();
-                        } else {
-                                System.out.println("Invalid choice.");
-                        }
-                }
-
-        }
-
-        public void displaySelectedCourse() {
-                System.out.print("\033[H\033[2J");
-                System.out.println("=====  REGISTERED COURSES =====\n");
-
-                List<Course> studentCourses = loggedInUser.getCourses();
-                Course.printCourses(studentCourses);
-
-                System.out.print("\nPress 0 to return : ");
-                int selection = input.nextInt();
-                if (selection == 0)
-                        dashboard();
-
-        }
-
-        // public void displayAcademicCredentials() {
-        // if (loggedInUser != null) {
-        // System.out.println("Academic Credentials for " + loggedInUser.getUsername() +
-        // ":");
-        // System.out.println("Degree: " + loggedInUser.getDegree());
-        // System.out.println("Major: " + loggedInUser.getMajor());
-        // System.out.println("GPA: " + loggedInUser.getGpa());
-        // } else {
-        // System.out.println("You must be logged in to view your academic
-        // credentials.");
-        // }
-        // }
-
-}
Index: src_2/User.java
===================================================================
diff --git a/src_2/User.java b/src_2/User.java
deleted file mode 100644
--- a/src_2/User.java	
+++ /dev/null	
@@ -1,43 +0,0 @@
-public abstract class User {
-    private String username;
-    private String password;
-    private String emailAddress;
-    private int phoneNumber;
-    private AddressInfo addressInfo; // Composition
-
-    public User(String username, String password, String emailAddress, int phoneNumber, AddressInfo addressInfo) {
-        this.username = username;
-        this.password = password;
-        this.emailAddress = emailAddress;
-        this.phoneNumber = phoneNumber;
-        this.addressInfo = addressInfo;
-    }
-
-    public User() {
-    }
-
-    public User(String username, String password) {
-        this.username = username;
-        this.password = password;
-    }
-
-    public String getUsername() {
-        return username;
-    }
-
-    public String getPassword() {
-        return password;
-    }
-
-    public String getEmailAddress() {
-        return emailAddress;
-    }
-
-    public int getPhoneNumber() {
-        return phoneNumber;
-    }
-
-    public AddressInfo getAddressInfo() {
-        return addressInfo;
-    }
-}
Index: src_2/Administrator.java
===================================================================
diff --git a/src_2/Administrator.java b/src_2/Administrator.java
deleted file mode 100644
--- a/src_2/Administrator.java	
+++ /dev/null	
@@ -1,17 +0,0 @@
-public class Administrator extends User {
-    private int administratorId;
-
-    public Administrator(String username, String password, String emailAddress, int phoneNumber, int administratorId,
-            AddressInfo addressInfo) {
-        super(username, password, emailAddress, phoneNumber, addressInfo);
-        this.administratorId = administratorId;
-    }
-
-    public int getAdministratorId() {
-        return administratorId;
-    }
-
-    public void setAdministratorId(int administratorId) {
-        this.administratorId = administratorId;
-    }
-}
Index: src_2/AddressInfo.java
===================================================================
diff --git a/src_2/AddressInfo.java b/src_2/AddressInfo.java
deleted file mode 100644
--- a/src_2/AddressInfo.java	
+++ /dev/null	
@@ -1,73 +0,0 @@
-// Definition : Composition Like Aggregation but the owned object is not
-// independent from the owner which means by deleting owner the owned object
-// will also be deleted.
-
-public class AddressInfo {
-    private String street;
-    private String city;
-    private String state;
-    private String postalCode;
-    private String country;
-
-    public AddressInfo(String street, String city, String state, String postalCode, String country) {
-        this.street = street;
-        this.city = city;
-        this.state = state;
-        this.postalCode = postalCode;
-        this.country = country;
-    }
-
-    public AddressInfo() {
-    }
-
-    @Override
-    public String toString() {
-        return "AddressInfo street = " + street + ", city = " + city + ", state = " + state + ", postalCode = "
-                + postalCode
-                + ", country = " + country;
-    }
-
-    public String getStreet() {
-        return street;
-    }
-
-    public void setStreet(String street) {
-        this.street = street;
-    }
-
-    public String getCity() {
-        return city;
-    }
-
-    public void setCity(String city) {
-        this.city = city;
-    }
-
-    public String getState() {
-        return state;
-    }
-
-    public void setState(String state) {
-        this.state = state;
-    }
-
-    public String getPostalCode() {
-        return postalCode;
-    }
-
-    public void setPostalCode(String postalCode) {
-        this.postalCode = postalCode;
-    }
-
-    public String getCountry() {
-        return country;
-    }
-
-    public void setCountry(String country) {
-        this.country = country;
-    }
-
-    public void validate() {
-    }
-
-}
Index: src_2/Course.java
===================================================================
diff --git a/src_2/Course.java b/src_2/Course.java
deleted file mode 100644
--- a/src_2/Course.java	
+++ /dev/null	
@@ -1,172 +0,0 @@
-import java.util.ArrayList;
-import java.util.Arrays;
-import java.util.List;
-
-enum MediumOfStudy {
-    FOUNDATION,
-    DIPLOMA,
-    UNDERGRADUATE,
-    POSTGRADUATE,
-    PHD;
-}
-
-public class Course {
-    private String courseId;
-    private String courseName;
-    private String[] subjectTaught;
-    private int courseDuration;
-    private String[] employmentOpportunities;
-    private String[] scopeForFutherStudies;
-    private boolean scholarshipFacilities;
-    private int feeStructure;
-
-    // Additional
-    private int maximumStudent;
-    private MediumOfStudy mediumStudy;
-    private Programme programme; // Composition
-
-    ArrayList<Course> courses = new ArrayList<>();
-
-    public Course(String courseId, String courseName, String[] subjectTaught, int courseDuration,
-            String[] employmentOpportunities, String[] scopeForFutherStudies, boolean scholarshipFacilities,
-            int feeStructure, int maximumStudent, MediumOfStudy mediumStudy) {
-        this.courseId = courseId;
-        this.courseName = courseName;
-        this.subjectTaught = subjectTaught;
-        this.courseDuration = courseDuration;
-        this.employmentOpportunities = employmentOpportunities;
-        this.scopeForFutherStudies = scopeForFutherStudies;
-        this.scholarshipFacilities = scholarshipFacilities;
-        this.feeStructure = feeStructure;
-        this.maximumStudent = maximumStudent;
-        this.mediumStudy = mediumStudy;
-    }
-
-    public Course() {
-        Course science = new Course("ODN3829", "Bachelor of Science (Hons.) Intelligent Robotics",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-        Course electronicEngineering = new Course("ODN3329", "Bachelor of Engineering (Hons.) Electronics",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-        Course computerScience = new Course("ODN3329", "Bachelor of Computer Science (Hons.)",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-        Course accounting = new Course("ODN3329", "Bachelor of Accounting (Hons.)",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-        Course businessManagement = new Course("ODN3329", "Bachelor of Business Management (Hons.)",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-
-        courses.add(science);
-        courses.add(electronicEngineering);
-        courses.add(computerScience);
-        courses.add(accounting);
-        courses.add(businessManagement);
-    }
-
-    public Course(String courseName) {
-        this.courseName = courseName;
-    }
-
-    @Override
-    public String toString() {
-        return "courseId : " + courseId + "\ncourseName : " + courseName + "\nsubjectTaught : "
-                + Arrays.toString(subjectTaught) + "\ncourseDuration : " + courseDuration
-                + "\nemploymentOpportunities : "
-                + Arrays.toString(employmentOpportunities) + "\nscopeForFutherStudies : "
-                + Arrays.toString(scopeForFutherStudies) + "\nscholarshipFacilities : " + scholarshipFacilities
-                + "\nfeeStructure : " + feeStructure + "\nmaximumStudent : " + maximumStudent + "\nmediumStudy : "
-                + mediumStudy + "\nprogramme : " + programme;
-    }
-
-    public void addCourse() {
-
-    }
-
-    public void withdrawCourse() {
-
-    }
-
-    public String getCourseId() {
-        return courseId;
-    }
-
-    public String getCourseName() {
-        return courseName;
-    }
-
-    public int getMaximumStudent() {
-        return maximumStudent;
-    }
-
-    public int getCourseDuration() {
-        return courseDuration;
-    }
-
-    public MediumOfStudy getMediumOfStudy() {
-        return mediumStudy;
-    }
-
-    public Programme getProgramme() {
-        return programme;
-    }
-
-    public String[] getSubjectsTaught() {
-        return subjectTaught;
-    }
-
-    public void displayCourseList() {
-
-        // Course firstCourse = course.get(0);
-        // System.out.println("Name of the first course: " +
-        // firstCourse.getSubjectsTaught()[1]);
-
-        // System.out.println("\n===== COURSE INFORMATION =====\n");
-        // System.out.println("Elements of ArrayList are:\n");
-        // for (int i = 0; i < course.size(); i++) {
-        // System.out.println(course.get(i).toString() + " ");
-        // System.out.println("\n");
-        // }
-        // System.out.println("\n");
-    }
-
-    public List<Course> getAllCourses() {
-        return courses;
-    }
-
-    public static void printCourses(List<Course> courses) {
-        if (courses.isEmpty()) {
-            System.out.println("Student has no courses yet.");
-        } else {
-
-            int i = 1;
-            for (Course course : courses) {
-                System.out.println("(" + i + ") " + course.getCourseName());
-                i++;
-            }
-        }
-    }
-
-}
Index: src/main/java/com/example/csp/loginController.java
===================================================================
diff --git a/src/main/java/com/example/csp/loginController.java b/src/main/java/com/example/csp/loginController.java
deleted file mode 100644
--- a/src/main/java/com/example/csp/loginController.java	
+++ /dev/null	
@@ -1,334 +0,0 @@
-package com.example.csp;
-
-import javafx.fxml.FXML;
-import javafx.scene.control.Hyperlink;
-
-public class loginController {
-
-        public String username, password, emailAddress;
-        public int phoneNumber;
-
-        AddressInfo theAddress = new AddressInfo();
-        List<Student> listOfUsers = new ArrayList<>();
-        Student loggedInUser = null;
-        Scanner input = new Scanner(System.in);
-
-        // Student student = new Student("JohnDoe", 12345);
-        Course course = new Course("ODN3329", "Foundation in Arts ",
-                new String[] { "Data Structures", "Algorithms", "Programming Languages" },
-                120,
-                new String[] { "Masters in Computer Science",
-                        "MBA in IT" },
-                new String[] { "hello" },
-                true, 14, 120, MediumOfStudy.FOUNDATION);
-
-        public void displayStudentPortal() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== WELCOME TO STUDENT PORTAL =====");
-            System.out.println("\n(1) LOGIN");
-            System.out.println("(2) REGISTER");
-
-            System.out.print("\nChoose 1 : ");
-            int selection = input.nextInt();
-            if (selection == 1) {
-                displayLogin();
-            } else if (selection == 2) {
-                displayRegister();
-            }
-
-        }
-
-        public void displayLogin() {
-            System.out.print("\033[H\033[2J");
-
-            listOfUsers.add(new Student("uzair", "123"));
-            try (Scanner input = new Scanner(System.in)) {
-                System.out.println("===== STUDENT LOGIN =====");
-                System.out.print("\nEnter username: ");
-                String inpUser = input.nextLine();
-                System.out.print("Enter password: ");
-                String inpPass = input.nextLine();
-
-                // check if student is exist
-                for (Student user : listOfUsers) {
-                    if (user.getUsername().equals(inpUser)) {
-                        if (user.getPassword().equals(inpPass)) {
-                            loggedInUser = user;
-                            dashboard();
-                            return;
-                        }
-                    }
-                }
-                System.out.println("Invalid username/password combination\n");
-
-            }
-        }
-
-        public void displayRegister() {
-            System.out.print("\033[H\033[2J");
-            try (Scanner input = new Scanner(System.in)) {
-
-                System.out.println("===== STUDENT REGISTRATION =====");
-                System.out.print("\nEnter username      : ");
-                String username = input.nextLine();
-
-                System.out.print("Enter password      : ");
-                password = input.nextLine();
-
-                System.out.print("Enter email address : ");
-                emailAddress = input.nextLine();
-
-                System.out.print("Enter phone number  : ");
-                phoneNumber = Integer.parseInt(input.nextLine());
-
-                System.out.println("\n===== ADDRESS INFORMATION =====");
-                System.out.print("\nEnter street     : ");
-                String street = input.nextLine();
-                theAddress.setStreet(street);
-
-                System.out.print("Enter city       : ");
-                String city = input.nextLine();
-                theAddress.setCity(city);
-
-                System.out.print("Enter state      : ");
-                String state = input.nextLine();
-                theAddress.setState(state);
-
-                System.out.print("Enter postalCode : ");
-                String postalCode = input.nextLine();
-                theAddress.setPostalCode(postalCode);
-
-                System.out.print("Enter country    : ");
-                String country = input.nextLine();
-                theAddress.setCountry(country);
-
-                Student newStudent = new Student(username, password, emailAddress, phoneNumber, theAddress,
-                        null,
-                        emailAddress);
-                listOfUsers.add(newStudent);
-
-                displayStudentPortal();
-            } catch (NumberFormatException e) {
-                e.printStackTrace();
-            }
-        }
-
-        public void dashboard() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== DASHBOARD =====");
-            System.out.println("Welcome " + loggedInUser.getUsername() + "!");
-
-            System.out.println("\n1. MANAGE PERSONAL INFORMATION");
-            System.out.println("2. VIEW ACADEMIC CREDENTIALS");
-            System.out.println("3. VIEW AVAILABLE COURSES");
-            System.out.println("4. VIEW SELECTED COURSES");
-            System.out.println("5. VIEW VIDEO BRIEFINGS");
-            System.out.println("6. LOGOUT");
-
-            System.out.print("\nChoose 1 : ");
-
-            int choice = 0;
-            try {
-                choice = input.nextInt();
-            } catch (InputMismatchException e) {
-                System.out.println("Invalid input, please enter a number.");
-                dashboard();
-                return;
-            }
-
-            switch (choice) {
-                case 1:
-                    studentInformation();
-                    break;
-                case 2:
-                    // academicCredential();
-                    break;
-                case 3:
-                    displayCourseOffered();
-                    break;
-                case 4:
-                    displaySelectedCourse();
-                    break;
-                default:
-                    System.out.println("Invalid option, please try again.");
-                    dashboard();
-                    return;
-            }
-
-        }
-
-        public void studentInformation() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== STUDENT INFORMATION =====");
-            System.out.println("Student Name  : " + loggedInUser.getUsername());
-            System.out.println("Password      : " + loggedInUser.getPassword());
-            System.out.println("Student ID    : " + loggedInUser.getStudentId());
-            System.out.println("Email Address : " + loggedInUser.getEmailAddress());
-            System.out.println("Phone Number  : " + loggedInUser.getPhoneNumber());
-            // System.out.println("Faculty : " + loggedInUser.getFaculty());
-
-            System.out.println("\n===== STUDENT ADDRESS INFORMATION =====");
-            System.out.println("Street       : " + loggedInUser.getAddressInfo().getStreet());
-            System.out.println("City         : " + loggedInUser.getAddressInfo().getCity());
-            System.out.println("State        : " + loggedInUser.getAddressInfo().getState());
-            System.out.println("Postal Code  : " + loggedInUser.getAddressInfo().getPostalCode());
-            System.out.println("Country      : " + loggedInUser.getAddressInfo().getCountry());
-
-            System.out.print("\nPress 0 to return : ");
-            int selection = input.nextInt();
-            if (selection == 0)
-                dashboard();
-
-        }
-
-        public void displayCourseOffered() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== BROWSE THE PROGRAMMES =====\n");
-
-            // display all available course
-            Course courseList = new Course();
-            List<Course> courses = courseList.getAllCourses();
-
-            int i = 1;
-            for (Course course : courses) {
-                System.out.println("(" + i + ") " + course.getCourseName());
-                i++;
-            }
-
-            System.out.println("\n\n(1) ADD COURSE");
-            System.out.println("(2) DELETE COURSE");
-            System.out.println("(3) RETURN TO DASHBOARD");
-
-            System.out.print("\nChoose 1 : ");
-            int selection = input.nextInt();
-            if (selection == 1) {
-                displayCourseSelection();
-            } else if (selection == 2) {
-                unregisterFromCourse();
-            } else if (selection == 3) {
-                dashboard();
-            }
-
-            System.out.print("\nChoose 1 : ");
-
-            int choice = 0;
-            try {
-                choice = input.nextInt();
-            } catch (InputMismatchException e) {
-                System.out.println("Invalid input, please enter a number.");
-                dashboard();
-                return;
-            }
-
-            switch (choice) {
-                case 1:
-                    displayCourseSelection();
-                    break;
-                case 2:
-                    unregisterFromCourse();
-                    break;
-                case 3:
-                    dashboard();
-                    break;
-                default:
-                    System.out.println("Invalid option, please try again.");
-                    dashboard();
-                    return;
-            }
-
-        }
-
-        public void displayCourseSelection() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("===== BROWSE THE PROGRAMMES =====\n");
-
-            // display all available course
-            Course courseList = new Course();
-            List<Course> availableCourses = courseList.getAllCourses();
-
-            int i = 1;
-            for (Course course : availableCourses) {
-                System.out.println("(" + i + ") " + course.getCourseName());
-                i++;
-            }
-
-            System.out.print("\nSelect a course to register for : ");
-            int choice = input.nextInt();
-
-            Course selectedCourse = availableCourses.get(choice - 1);
-            loggedInUser.addCourse(selectedCourse);
-
-            System.out.println("\nYou have been registered to " + selectedCourse.getCourseName());
-
-            System.out.print("\nPress 0 to return : ");
-            int selection = input.nextInt();
-            if (selection == 0)
-                displayCourseOffered();
-        }
-
-        public void unregisterFromCourse() {
-            System.out.print("\033[H\033[2J");
-
-            List<Course> registeredCourses = loggedInUser.getCourses();
-
-            System.out.println("=====  UNREGISTERED COURSES =====");
-
-            if (registeredCourses.isEmpty()) {
-                System.out.println("You haven't registered for any courses yet.");
-                return;
-            }
-
-            for (int i = 0; i < registeredCourses.size(); i++) {
-                System.out.println("(" + (i + 1) + ") " + registeredCourses.get(i).getCourseName());
-            }
-
-            try (Scanner input = new Scanner(System.in)) {
-                int choice = 0;
-                System.out.print("\nSelect a course to unregister from :");
-                choice = input.nextInt();
-                if (choice > 0 && choice <= registeredCourses.size()) {
-                    Course courseToUnregister = registeredCourses.get(choice - 1);
-                    loggedInUser.removeCourse(courseToUnregister);
-                    System.out.println("You have been unregistered from "
-                            + courseToUnregister.getCourseName());
-                    System.out.print("\nPress 0 to return : ");
-                    int selection = input.nextInt();
-                    if (selection == 0)
-                        displayCourseOffered();
-                } else {
-                    System.out.println("Invalid choice.");
-                }
-            }
-
-        }
-
-        public void displaySelectedCourse() {
-            System.out.print("\033[H\033[2J");
-            System.out.println("=====  REGISTERED COURSES =====\n");
-
-            List<Course> studentCourses = loggedInUser.getCourses();
-            Course.printCourses(studentCourses);
-
-            System.out.print("\nPress 0 to return : ");
-            int selection = input.nextInt();
-            if (selection == 0)
-                dashboard();
-
-        }
-
-        // public void displayAcademicCredentials() {
-        // if (loggedInUser != null) {
-        // System.out.println("Academic Credentials for " + loggedInUser.getUsername() +
-        // ":");
-        // System.out.println("Degree: " + loggedInUser.getDegree());
-        // System.out.println("Major: " + loggedInUser.getMajor());
-        // System.out.println("GPA: " + loggedInUser.getGpa());
-        // } else {
-        // System.out.println("You must be logged in to view your academic
-        // credentials.");
-        // }
-        // }
-
-
-
-}
\ No newline at end of file
Index: src_2/personal.txt
===================================================================
diff --git a/src_2/personal.txt b/src_2/personal.txt
deleted file mode 100644
--- a/src_2/personal.txt	
+++ /dev/null	
@@ -1,8 +0,0 @@
-# STUDENT DASHBOARD :
-
-- Manage personal information: Students can update their personal information, such as contact details and preferred medium of study.
-- View academic credentials: Students can view their academic credentials, such as their transcripts and test scores, which are required for course selection.
-- View available courses: Students can view a list of available courses and filter them by subject, level of study, or other criteria.
-- View selected courses: Students can view the courses they have selected and the order of preference, and make changes as needed.
-- Select courses: Students can select one or more courses to register for, and provide an order of preference for the selected courses.
-- View video briefings: Students can view video briefings, which provide information about the courses and the entry level requirements.
\ No newline at end of file
Index: src_2/Student.java
===================================================================
diff --git a/src_2/Student.java b/src_2/Student.java
deleted file mode 100644
--- a/src_2/Student.java	
+++ /dev/null	
@@ -1,80 +0,0 @@
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Random;
-
-public class Student extends User {
-
-    private int studentId;
-    private MediumStudy mediumStudy;
-    private String faculty;
-    private List<Course> courses;
-
-    public Student(String username, String password, String emailAddress, int phoneNumber, AddressInfo addressInfo,
-            MediumStudy mediumStudy, String faculty) {
-        super(username, password, emailAddress, phoneNumber, addressInfo);
-        Random rand = new Random();
-        this.studentId = rand.nextInt((1000000000 - 100000000) + 1) + 100000000;
-        this.mediumStudy = mediumStudy;
-        this.faculty = faculty;
-        this.courses = new ArrayList<>();
-    }
-
-    public Student(String username, String password) {
-        super(username, password);
-        this.courses = new ArrayList<>();
-    }
-
-    public Student(String string) {
-        this.courses = new ArrayList<>();
-
-    }
-
-    public int getStudentId() {
-        return studentId;
-    }
-
-    public void setStudentId(int studentId) {
-        Random rand = new Random();
-        studentId = rand.nextInt((1000000000 - 100000000) + 1) + 100000000;
-        this.studentId = studentId;
-    }
-
-    public MediumStudy getMediumStudy() {
-        return mediumStudy;
-    }
-
-    public void setMediumStudy(MediumStudy mediumStudy) {
-        this.mediumStudy = mediumStudy;
-    }
-
-    public String getFaculty() {
-        return faculty;
-    }
-
-    public void setFaculty(String faculty) {
-        this.faculty = faculty;
-    }
-
-    public void addCourse(Course course) {
-        courses.add(course);
-    }
-
-    public void removeCourse(Course course) {
-        courses.remove(course);
-    }
-
-    public List<Course> getCourses() {
-        return courses;
-    }
-
-    public void printRegisteredCourses() {
-        if (courses.isEmpty()) {
-            System.out.println("No registered courses found");
-        } else {
-            System.out.println("Registered Courses:");
-            for (Course course : courses) {
-                System.out.println(course.getCourseName());
-            }
-        }
-    }
-}
Index: src_2/Professor.java
===================================================================
diff --git a/src_2/Professor.java b/src_2/Professor.java
deleted file mode 100644
--- a/src_2/Professor.java	
+++ /dev/null	
@@ -1,28 +0,0 @@
-public class Professor extends User {
-    private int professorId;
-    private String faculty;
-
-    public Professor(String username, String password, String emailAddress, int phoneNumber, int professorId,
-            AddressInfo addressInfo, String faculty) {
-        super(username, password, emailAddress, phoneNumber, addressInfo);
-        this.professorId = professorId;
-        this.faculty = faculty;
-    }
-
-    public int getProfessorId() {
-        return professorId;
-    }
-
-    public void setProfessorId(int professorId) {
-        this.professorId = professorId;
-    }
-
-    public String getFaculty() {
-        return faculty;
-    }
-
-    public void setFaculty(String faculty) {
-        this.faculty = faculty;
-    }
-
-}
Index: .idea/jarRepositories.xml
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/jarRepositories.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/example/csp/Admin.java
===================================================================
diff --git a/src/main/java/com/example/csp/Admin.java b/src/main/java/com/example/csp/Admin.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/Admin.java	
@@ -0,0 +1,19 @@
+package com.example.csp;
+
+public class Admin extends User {
+
+    private int adminId;
+
+    public Admin(String username, String password, String emailAddress, int phoneNumber, int adminId, AddressInfo addressInfo) {
+        super(username, password, emailAddress, phoneNumber, addressInfo);
+        this.adminId = adminId;
+    }
+
+    public int getAdminId() {
+        return adminId;
+    }
+
+    public void setAdminId(int adminId) {
+        this.adminId = adminId;
+    }
+}
Index: .idea/libraries/Maven__org_openjfx_javafx_controls_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_controls_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-controls:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_commons_1_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-commons:1.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.1/junit-platform-commons-1.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.1/junit-platform-commons-1.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.9.1/junit-platform-commons-1.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/resources/com/example/csp/register_admin.fxml
===================================================================
diff --git a/src/main/resources/com/example/csp/register_admin.fxml b/src/main/resources/com/example/csp/register_admin.fxml
new file mode 100644
--- /dev/null	
+++ b/src/main/resources/com/example/csp/register_admin.fxml	
@@ -0,0 +1,90 @@
+<?xml version="1.0" encoding="UTF-8"?>
+
+<?import javafx.scene.control.*?>
+<?import javafx.scene.layout.*?>
+<?import javafx.scene.text.*?>
+
+<AnchorPane prefHeight="540.0" prefWidth="960.0" style="-fx-background-color: #f2f2f2;" xmlns="http://javafx.com/javafx/17.0.2-ea" xmlns:fx="http://javafx.com/fxml/1" fx:controller="com.example.csp.AdminRegisterController">
+   <children>
+      <Pane layoutX="139.0" layoutY="43.0" prefHeight="418.0" prefWidth="681.0" style="-fx-background-radius: 20; -fx-background-color: white;">
+         <children>
+            <AnchorPane layoutX="43.0" layoutY="29.0">
+               <children>
+                  <Label layoutX="255.0" layoutY="-8.0" text="REGISTER" underline="true">
+                     <font>
+                        <Font size="18.0" />
+                     </font>
+                  </Label>
+                  <GridPane layoutY="34.0">
+                    <columnConstraints>
+                      <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="180.0" />
+                        <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="30.0" />
+                        <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="180.0" />
+                        <ColumnConstraints hgrow="SOMETIMES" minWidth="10.0" prefWidth="30.0" />
+                    </columnConstraints>
+                    <rowConstraints>
+                      <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                      <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                        <RowConstraints minHeight="10.0" prefHeight="30.0" vgrow="SOMETIMES" />
+                    </rowConstraints>
+                     <children>
+                        <Label text="Username" />
+                        <TextField fx:id="input_username" GridPane.rowIndex="1" />
+                        <TextField fx:id="input_email_address" GridPane.rowIndex="3" />
+                        <TextField fx:id="input_phone_number" GridPane.rowIndex="5" />
+                        <Label text="Email Address" GridPane.rowIndex="2" />
+                        <Label text="Phone Number" GridPane.rowIndex="4" />
+                        <Label text="Password" GridPane.rowIndex="6" />
+                        <TextField fx:id="input_password" GridPane.rowIndex="7" />
+                        <TextField fx:id="input_street" GridPane.columnIndex="2" GridPane.rowIndex="1" />
+                        <TextField fx:id="input_city" layoutX="291.0" layoutY="73.0" GridPane.columnIndex="2" GridPane.rowIndex="3" />
+                        <TextField fx:id="input_postalCode" layoutX="291.0" layoutY="134.0" GridPane.columnIndex="2" GridPane.rowIndex="5" />
+                        <Label text="Street " GridPane.columnIndex="2" />
+                        <Label layoutX="220.0" layoutY="47.0" text="City" GridPane.columnIndex="2" GridPane.rowIndex="2" />
+                        <Label layoutX="220.0" layoutY="108.0" text="Country" GridPane.columnIndex="2" GridPane.rowIndex="8" />
+                        <Label layoutX="220.0" layoutY="138.0" text="Postal Code" GridPane.columnIndex="2" GridPane.rowIndex="4" />
+                        <TextField fx:id="input_country" GridPane.columnIndex="2" GridPane.rowIndex="9" />
+                        <Label layoutX="220.0" layoutY="260.0" text="State" GridPane.columnIndex="2" GridPane.rowIndex="6" />
+                        <TextField fx:id="input_state" layoutX="220.0" layoutY="286.0" GridPane.columnIndex="2" GridPane.rowIndex="7" />
+                        <Label layoutX="10.0" layoutY="199.0" text="Admin ID" GridPane.rowIndex="8" />
+                        <TextField fx:id="input_adminID" layoutX="10.0" layoutY="225.0" GridPane.rowIndex="9" />
+                     </children>
+                  </GridPane>
+               </children>
+            </AnchorPane>
+            <Button fx:id="btn_register" layoutX="540.0" layoutY="175.0" mnemonicParsing="false" onAction="#OnRegisterClick" prefHeight="34.0" prefWidth="81.0" style="-fx-background-color: #2C9C91;" text="REGISTER" textFill="WHITE">
+               <!-- need to add to save all register details-->
+               <font>
+                  <Font name="System Bold" size="12.0" />
+               </font>
+            </Button>
+         </children>
+      </Pane>
+      <Pane layoutX="624.0" layoutY="270.0" prefHeight="34.0" prefWidth="278.0" style="-fx-background-radius: 20; -fx-background-color: #2C9C91;">
+         <children>
+            <Button layoutX="145.0" layoutY="5.0" mnemonicParsing="false" onAction="#swiitchToLogin" prefHeight="19.0" prefWidth="81.0" style="-fx-background-color: #113E3A;" text="LOGIN" textFill="WHITE">
+                     <font>
+                  <Font name="System Bold" size="12.0" />
+               </font>
+            </Button>
+            <Label layoutX="234.0" layoutY="8.0" text="here!" textFill="WHITE" wrapText="true">
+               <font>
+                  <Font size="13.0" />
+               </font>
+            </Label>
+            <Label layoutX="14.0" layoutY="8.0" text="If you have registered, " textFill="WHITE" wrapText="true">
+               <font>
+                  <Font size="13.0" />
+               </font>
+            </Label>
+         </children>
+      </Pane>
+   </children>
+</AnchorPane>
Index: src/main/java/com/example/csp/AdminRegisterController.java
===================================================================
diff --git a/src/main/java/com/example/csp/AdminRegisterController.java b/src/main/java/com/example/csp/AdminRegisterController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/AdminRegisterController.java	
@@ -0,0 +1,81 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.ResourceBundle;
+
+import static java.lang.Integer.parseInt;
+
+public class AdminRegisterController {
+
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+
+    @FXML
+    private TextField input_username, input_email_address, input_phone_number, input_password, input_adminID, input_street, input_city, input_state, input_postalCode, input_country;
+
+    List<Admin> listOfUsers = new ArrayList<>();
+
+    public void OnRegisterClick(ActionEvent event) throws IOException {
+
+        String username = input_username.getText();
+        String emailAddress = input_email_address.getText();
+        int phoneNumber = parseInt(input_phone_number.getText());
+        String password = input_password.getText();
+        int adminID = parseInt(input_adminID.getText());
+
+        //ADDRESSINFO
+
+        AddressInfo theAddress = new AddressInfo();
+
+        String street = input_street.getText();
+        theAddress.setStreet(street);
+
+        String city = input_city.getText();
+        theAddress.setCity(city);
+
+        String state = input_state.getText();
+        theAddress.setState(state);
+
+        String postalCode = input_postalCode.getText();
+        theAddress.setPostalCode(postalCode);
+
+        String country = input_country.getText();
+        theAddress.setCountry(country);
+
+        Admin newAdmin = new Admin(username, password, emailAddress, phoneNumber, adminID, theAddress);
+        listOfUsers.add(newAdmin);
+
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("admin_dashboard.fxml"));
+        root = loader.load();
+        AdminDashboardController adminDashboardController = loader.getController();
+        adminDashboardController.displayName(newAdmin);
+
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void swiitchToLogin(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("login.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+}
\ No newline at end of file
Index: .idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_apiguardian_apiguardian_api_1_1_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.apiguardian:apiguardian-api:1.1.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/example/csp/AdminUpdateCourse.java
===================================================================
diff --git a/src/main/java/com/example/csp/AdminUpdateCourse.java b/src/main/java/com/example/csp/AdminUpdateCourse.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/AdminUpdateCourse.java	
@@ -0,0 +1,4 @@
+package com.example.csp;
+
+public class AdminUpdateCourse {
+}
Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_graphics_win_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-graphics:win:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_opentest4j_opentest4j_1_2_0.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.opentest4j:opentest4j:1.2.0">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_base_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_base_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-base:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_controls_win_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-controls:win:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-controls/17.0.2/javafx-controls-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_base_win_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-base:win:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-base/17.0.2/javafx-base-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_graphics_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-graphics:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-graphics/17.0.2/javafx-graphics-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_engine_5_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.1/junit-jupiter-engine-5.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.1/junit-jupiter-engine-5.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.9.1/junit-jupiter-engine-5.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_1.xml b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_jupiter_junit_jupiter_api_5_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.1/junit-jupiter-api-5.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.1/junit-jupiter-api-5.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.9.1/junit-jupiter-api-5.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: CSP.iml
===================================================================
diff --git a/CSP.iml b/CSP.iml
new file mode 100644
--- /dev/null	
+++ b/CSP.iml	
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_17">
+    <output url="file://$MODULE_DIR$/target/classes" />
+    <output-test url="file://$MODULE_DIR$/target/test-classes" />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <excludeFolder url="file://$MODULE_DIR$/target" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-controls:win:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-graphics:win:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-base:win:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:17.0.2" level="project" />
+    <orderEntry type="library" name="Maven: org.openjfx:javafx-fxml:win:17.0.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-api:5.9.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.opentest4j:opentest4j:1.2.0" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-commons:1.9.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.apiguardian:apiguardian-api:1.1.2" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.jupiter:junit-jupiter-engine:5.9.1" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: org.junit.platform:junit-platform-engine:1.9.1" level="project" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_fxml_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_fxml_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-fxml:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_0_2.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_0_2.xml b/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_0_2.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_openjfx_javafx_fxml_win_17_0_2.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.openjfx:javafx-fxml:win:17.0.2">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2-win.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/openjfx/javafx-fxml/17.0.2/javafx-fxml-17.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_1.xml
===================================================================
diff --git a/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_1.xml b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_1.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/libraries/Maven__org_junit_platform_junit_platform_engine_1_9_1.xml	
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: org.junit.platform:junit-platform-engine:1.9.1">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.1/junit-platform-engine-1.9.1.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.1/junit-platform-engine-1.9.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.9.1/junit-platform-engine-1.9.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: src/main/java/com/example/csp/Course.java
===================================================================
diff --git a/src/main/java/com/example/csp/Course.java b/src/main/java/com/example/csp/Course.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/Course.java	
@@ -0,0 +1,111 @@
+package com.example.csp;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Iterator;
+import java.util.List;
+
+public class Course {
+    private String courseId;
+    private String courseName;
+    private String[] subjectTaught;
+    private int courseDuration;
+    private String[] employmentOpportunities;
+    private String[] scopeForFutherStudies;
+    private boolean scholarshipFacilities;
+    private int feeStructure;
+    private int maximumStudent;
+    private MediumStudy mediumStudy;
+    private Programme programme;
+    ArrayList<Course> courses = new ArrayList();
+
+    public Course(String var1, String var2, String[] var3, int var4, String[] var5, String[] var6, boolean var7, int var8, int var9, MediumStudy var10) {
+        this.courseId = var1;
+        this.courseName = var2;
+        this.subjectTaught = var3;
+        this.courseDuration = var4;
+        this.employmentOpportunities = var5;
+        this.scopeForFutherStudies = var6;
+        this.scholarshipFacilities = var7;
+        this.feeStructure = var8;
+        this.maximumStudent = var9;
+        this.mediumStudy = var10;
+    }
+
+    public Course() {
+        Course var1 = new Course("ODN3829", "Bachelor of Science (Hons.) Intelligent Robotics", new String[]{"Data Structures", "Algorithms", "Programming Languages"}, 120, new String[]{"Masters in Computer Science", "MBA in IT"}, new String[]{"hello"}, true, 14, 120, MediumStudy.FOUNDATION);
+        Course var2 = new Course("ODN3329", "Bachelor of Engineering (Hons.) Electronics", new String[]{"Data Structures", "Algorithms", "Programming Languages"}, 120, new String[]{"Masters in Computer Science", "MBA in IT"}, new String[]{"hello"}, true, 14, 120, MediumStudy.FOUNDATION);
+        Course var3 = new Course("ODN3329", "Bachelor of Computer Science (Hons.)", new String[]{"Data Structures", "Algorithms", "Programming Languages"}, 120, new String[]{"Masters in Computer Science", "MBA in IT"}, new String[]{"hello"}, true, 14, 120, MediumStudy.FOUNDATION);
+        Course var4 = new Course("ODN3329", "Bachelor of Accounting (Hons.)", new String[]{"Data Structures", "Algorithms", "Programming Languages"}, 120, new String[]{"Masters in Computer Science", "MBA in IT"}, new String[]{"hello"}, true, 14, 120, MediumStudy.FOUNDATION);
+        Course var5 = new Course("ODN3329", "Bachelor of Business Management (Hons.)", new String[]{"Data Structures", "Algorithms", "Programming Languages"}, 120, new String[]{"Masters in Computer Science", "MBA in IT"}, new String[]{"hello"}, true, 14, 120, MediumStudy.FOUNDATION);
+        this.courses.add(var1);
+        this.courses.add(var2);
+        this.courses.add(var3);
+        this.courses.add(var4);
+        this.courses.add(var5);
+    }
+
+    public Course(String var1) {
+        this.courseName = var1;
+    }
+
+    public String toString() {
+        String var10000 = this.courseId;
+        return "courseId : " + var10000 + "\ncourseName : " + this.courseName + "\nsubjectTaught : " + Arrays.toString(this.subjectTaught) + "\ncourseDuration : " + this.courseDuration + "\nemploymentOpportunities : " + Arrays.toString(this.employmentOpportunities) + "\nscopeForFutherStudies : " + Arrays.toString(this.scopeForFutherStudies) + "\nscholarshipFacilities : " + this.scholarshipFacilities + "\nfeeStructure : " + this.feeStructure + "\nmaximumStudent : " + this.maximumStudent + "\nmediumStudy : " + this.mediumStudy + "\nprogramme : " + this.programme;
+    }
+
+    public void addCourse() {
+    }
+
+    public void withdrawCourse() {
+    }
+
+    public String getCourseId() {
+        return this.courseId;
+    }
+
+    public String getCourseName() {
+        return this.courseName;
+    }
+
+    public int getMaximumStudent() {
+        return this.maximumStudent;
+    }
+
+    public int getCourseDuration() {
+        return this.courseDuration;
+    }
+
+    public MediumStudy getMediumOfStudy() {
+        return this.mediumStudy;
+    }
+
+    public Programme getProgramme() {
+        return this.programme;
+    }
+
+    public String[] getSubjectsTaught() {
+        return this.subjectTaught;
+    }
+
+    public void displayCourseList() {
+    }
+
+    public List<Course> getAllCourses() {
+        return this.courses;
+    }
+
+    public static void printCourses(List<Course> var0) {
+        if (var0.isEmpty()) {
+            System.out.println("Student has no courses yet.");
+        } else {
+            int var1 = 1;
+
+            for(Iterator var2 = var0.iterator(); var2.hasNext(); ++var1) {
+                Course var3 = (Course)var2.next();
+                System.out.println("(" + var1 + ") " + var3.getCourseName());
+            }
+        }
+
+    }
+}
Index: src/main/java/com/example/csp/MediumStudy.java
===================================================================
diff --git a/src/main/java/com/example/csp/MediumStudy.java b/src/main/java/com/example/csp/MediumStudy.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/MediumStudy.java	
@@ -0,0 +1,9 @@
+package com.example.csp;
+
+public enum MediumStudy {
+    FOUNDATION,
+    DIPLOMA,
+    UNDERGRADUATE,
+    POSTGRADUATE,
+    PHD;
+}
Index: src/main/java/com/example/csp/Programme.java
===================================================================
diff --git a/src/main/java/com/example/csp/Programme.java b/src/main/java/com/example/csp/Programme.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/Programme.java	
@@ -0,0 +1,36 @@
+package com.example.csp;// ProgrammeInfo is part of Composition.
+// Definition : Composition Like Aggregation but the owned object is not
+// independent from the owner which means by deleting owner the owned object
+// will also be deleted.
+
+public class Programme {
+    public String programmeId;
+    public String programmeName;
+
+    public Programme(String programmeId, String programmeName) {
+        this.programmeId = programmeId;
+        this.programmeName = programmeName;
+    }
+
+    @Override
+    public String toString() {
+        return "Programme [programmeId=" + programmeId + ", programmeName=" + programmeName;
+    }
+
+    public String getProgrammeId() {
+        return programmeId;
+    }
+
+    public void setProgrammeId(String programmeId) {
+        this.programmeId = programmeId;
+    }
+
+    public String getProgrammeName() {
+        return programmeName;
+    }
+
+    public void setProgrammeName(String programmeName) {
+        this.programmeName = programmeName;
+    }
+
+}
Index: src/main/java/com/example/csp/User.java
===================================================================
diff --git a/src/main/java/com/example/csp/User.java b/src/main/java/com/example/csp/User.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/User.java	
@@ -0,0 +1,45 @@
+package com.example.csp;
+
+public abstract class User {
+    private String username;
+    private String password;
+    private String emailAddress;
+    private int phoneNumber;
+    private AddressInfo addressInfo;
+
+    public User(String var1, String var2, String var3, int var4, AddressInfo var5) {
+        this.username = var1;
+        this.password = var2;
+        this.emailAddress = var3;
+        this.phoneNumber = var4;
+        this.addressInfo = var5;
+    }
+
+    public User(String username, String emailAddress, String phoneNumber, String password) {
+    }
+
+    public User(String var1, String var2) {
+        this.username = var1;
+        this.password = var2;
+    }
+
+    public String getUsername() {
+        return this.username;
+    }
+
+    public String getPassword() {
+        return this.password;
+    }
+
+    public String getEmailAddress() {
+        return this.emailAddress;
+    }
+
+    public int getPhoneNumber() {
+        return this.phoneNumber;
+    }
+
+    public AddressInfo getAddressInfo() {
+        return this.addressInfo;
+    }
+}
Index: src/main/java/com/example/csp/AdminDashboardController.java
===================================================================
diff --git a/src/main/java/com/example/csp/AdminDashboardController.java b/src/main/java/com/example/csp/AdminDashboardController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/AdminDashboardController.java	
@@ -0,0 +1,90 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.ChoiceBox;
+import javafx.scene.control.Label;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.ResourceBundle;
+
+public class AdminDashboardController implements Initializable {
+
+    Label label_faculty_name;
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+    private String[] LOS = {
+            "Foundation",
+            "Diploma",
+            "Bachelor's Degree",
+            "Masters"
+    };
+    private ChoiceBox<String> input_LOS;
+    private String myLOS;
+
+    public void displayName(String username) {
+        label_faculty_name.setText(username);
+    }
+
+    public void displayName(Admin admin) {
+        label_faculty_name.setText(admin.getUsername());
+    }
+
+    public void logOut(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("main_portal.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToAddCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_add_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToDeleteCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_delete_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToUpdateCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_update_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToViewCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_view_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    @Override
+    public void initialize(URL arg0, ResourceBundle arg1) {
+        input_LOS.getItems().addAll(LOS);
+        input_LOS.setOnAction(this::getLOS);
+    }
+
+    public void getLOS(ActionEvent event) {
+        String myLOS = input_LOS.getValue();
+        this.myLOS=myLOS;
+    }
+}
Index: src/main/java/com/example/csp/StudDashboardController.java
===================================================================
diff --git a/src/main/java/com/example/csp/StudDashboardController.java b/src/main/java/com/example/csp/StudDashboardController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/StudDashboardController.java	
@@ -0,0 +1,62 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.Label;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+
+public class StudDashboardController {
+
+    @FXML
+    Label labelName, labelID, labelPhoneNum, labelHomeAddress, label_course, label_specialization, label_duration, label_MOS, label_faculty;
+
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+
+    public void displayNameDashboard(String username) {
+        labelName.setText("Hello, "+username+"!");
+    }
+
+    public void displayStudDashboard(Student stud) {
+        labelName.setText(":  "+stud.getUsername());
+        labelPhoneNum.setText(":  "+stud.getPhoneNumber());
+        labelHomeAddress.setText(":  "+stud.getAddressInfo());
+        label_course.setText(":  "+stud.getLOS()+" of "+stud.getCourse());
+        label_specialization.setText(":  "+stud.getSpecialization());
+        label_MOS.setText(":  "+stud.getMediumStudy());
+        label_duration.setText(":  "+stud.getDuration()+" Years");
+    }
+
+    public void switchToFeeStructure(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("stud_fee_structure.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToCourseInfo(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("stud_course_info.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void logOut(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("main_portal.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+
+}
Index: src/main/java/com/example/csp/Student.java
===================================================================
diff --git a/src/main/java/com/example/csp/Student.java b/src/main/java/com/example/csp/Student.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/Student.java	
@@ -0,0 +1,91 @@
+package com.example.csp;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Random;
+
+public class Student extends User {
+
+    private int studentId;
+    private String mediumStudy;
+    private String faculty;
+    private String course;
+    private String LOS;
+    private String specialization;
+    private List<Course> courses;
+    private int duration;
+
+    public Student(String username, String password, String emailAddress, int phoneNumber, AddressInfo addressInfo,
+                   String mediumStudy, String faculty, String LOS, String course, String specialization, int duration) {
+        super(username, password, emailAddress, phoneNumber, addressInfo);
+        Random rand = new Random();
+        this.studentId = rand.nextInt((1000000000 - 100000000) + 1) + 100000000;
+        this.mediumStudy = mediumStudy;
+        this.faculty = faculty;
+        this.courses = new ArrayList<>();
+        this.course = course;
+        this.LOS = LOS;
+        this.specialization = specialization;
+        this.duration = duration;
+    }
+
+    // GETTERS
+    public String getCourse() {
+        return course;
+    }
+    public List<Course> getCourses() {
+        return courses;
+    }
+    public String getFaculty() {
+        return faculty;
+    }
+    public String getMediumStudy() {
+        return mediumStudy;
+    }
+    public String getSpecialization() { return specialization; }
+    public Student(String username, String password) {
+        super(username, password);
+        this.courses = new ArrayList<>();
+    }
+    public int getStudentId() {
+        return studentId;
+    }
+    public int getDuration() { return this.duration; }
+    public String getLOS() { return this.LOS; }
+
+
+    public void setStudentId(int studentId) {
+        Random rand = new Random();
+        studentId = rand.nextInt((1000000000 - 100000000) + 1) + 100000000;
+        this.studentId = studentId;
+    }
+
+
+    public void setMediumStudy(String mediumStudy) {
+        this.mediumStudy = mediumStudy;
+    }
+
+
+    public void setFaculty(String faculty) {
+        this.faculty = faculty;
+    }
+
+    public void addCourse(Course course) {
+        courses.add(course);
+    }
+
+    public void removeCourse(Course course) {
+        courses.remove(course);
+    }
+
+    public void printRegisteredCourses() {
+        if (courses.isEmpty()) {
+            System.out.println("No registered courses found");
+        } else {
+            System.out.println("Registered Courses:");
+            for (Course course : courses) {
+                System.out.println(course.getCourseName());
+            }
+        }
+    }
+}
Index: src/main/java/com/example/csp/AddressInfo.java
===================================================================
diff --git a/src/main/java/com/example/csp/AddressInfo.java b/src/main/java/com/example/csp/AddressInfo.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/AddressInfo.java	
@@ -0,0 +1,85 @@
+package com.example.csp;
+
+public class AddressInfo {
+    private String street;
+    private String city;
+    private String state;
+    private String postalCode;
+    private String country;
+
+    public AddressInfo(String street, String city, String state, String postalCode, String country) {
+        this.street = street;
+        this.city = city;
+        this.state = state;
+        this.postalCode = postalCode;
+        this.country = country;
+    }
+
+    public AddressInfo() {
+    }
+
+    public String getSampleAddress() {
+
+        String full=(street+" "+city);
+
+        String words[]=full.split("\\s");
+        String sampleAddress="";
+        for(String w:words){
+            String first=w.substring(0,1);
+            String afterfirst=w.substring(1);
+            sampleAddress+=first.toUpperCase()+afterfirst+" ";
+        }
+
+        return sampleAddress;
+    }
+
+    @Override
+    public String toString() {
+//        return "AddressInfo street = " + street + ", city = " + city + ", state = " + state + ", postalCode = " + postalCode + ", country = " + country;
+        return (street + ", " + city + ", " + state + ", " + postalCode + ", " + country);
+    }
+
+    public String getStreet() {
+        return street;
+    }
+
+    public void setStreet(String street) {
+        this.street = street;
+    }
+
+    public String getCity() {
+        return city;
+    }
+
+    public void setCity(String city) {
+        this.city = city;
+    }
+
+    public String getState() {
+        return state;
+    }
+
+    public void setState(String state) {
+        this.state = state;
+    }
+
+    public String getPostalCode() {
+        return postalCode;
+    }
+
+    public void setPostalCode(String postalCode) {
+        this.postalCode = postalCode;
+    }
+
+    public String getCountry() {
+        return country;
+    }
+
+    public void setCountry(String country) {
+        this.country = country;
+    }
+
+    public void validate() {
+    }
+
+}
Index: src/main/java/com/example/csp/StudRegisterController.java
===================================================================
diff --git a/src/main/java/com/example/csp/StudRegisterController.java b/src/main/java/com/example/csp/StudRegisterController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/StudRegisterController.java	
@@ -0,0 +1,152 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.*;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.ResourceBundle;
+
+import static java.lang.Integer.parseInt;
+
+
+public class StudRegisterController implements Initializable {
+
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+
+    @FXML
+    private TextField input_username, input_email_address, input_phone_number, input_password, input_street, input_city, input_state, input_postalCode, input_country, input_specialization;
+
+    @FXML
+    private ChoiceBox<String> input_LOS, input_course, input_faculty, input_MOD;
+
+    private String[] LOS = {
+            "Foundation",
+            "Diploma",
+            "Bachelor's Degree",
+            "Masters"
+    };
+
+    private String[] course = {
+            "Computer Science",
+            "Civil Engineering",
+            "Electrical Computer Engineering",
+            "Electrical Engineering",
+            "Mechanical Engineering"};
+
+    private String[] faculty = {
+            "Faculty of Engineering",
+            "Faculty of Computer Science"};
+
+    private String[] MOD = {
+            "Online",
+            "Virtual",
+            "Hybrid"
+    };
+
+    private String myMOD, myFaculty, myCourse, myLOS;
+    private int myDuration;
+//    private MediumStudy myMOD;
+
+    List<Student> listOfUsers = new ArrayList<>();
+
+    // save username, password, emailAddress, phoneNumber, theAddress, mediumStudy, faculty
+    public void OnRegisterClick(ActionEvent event) throws IOException {
+
+        String username = input_username.getText();
+        String emailAddress = input_email_address.getText();
+        int phoneNumber = parseInt(input_phone_number.getText());
+        String password = input_password.getText();
+        String specialization = input_specialization.getText();
+
+        AddressInfo theAddress = new AddressInfo();
+
+        String street = input_street.getText();
+        theAddress.setStreet(street);
+
+        String city = input_city.getText();
+        theAddress.setCity(city);
+
+        String state = input_state.getText();
+        theAddress.setState(state);
+
+        String postalCode = input_postalCode.getText();
+        theAddress.setPostalCode(postalCode);
+
+        String country = input_country.getText();
+        theAddress.setCountry(country);
+
+
+        String fullAddress= theAddress.getSampleAddress();
+
+        Student newStudent = new Student(username, password, emailAddress, phoneNumber, theAddress, myMOD, myFaculty, myLOS, myCourse, specialization, myDuration);
+        listOfUsers.add(newStudent);
+
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("stud_dashboard.fxml"));
+        root = loader.load();
+        StudDashboardController studDashboardController = loader.getController();
+        studDashboardController.displayNameDashboard(username);
+        studDashboardController.displayStudDashboard(newStudent);
+
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    @Override
+    public void initialize(URL arg0, ResourceBundle arg1) {
+
+        input_LOS.getItems().addAll(LOS);
+        input_LOS.setOnAction(this::getLOS);
+
+        input_course.getItems().addAll(course);
+        input_course.setOnAction(this::getCourse);
+
+        input_faculty.getItems().addAll(faculty);
+        input_faculty.setOnAction(this::getFaculty);
+
+        input_MOD.getItems().addAll(MOD);
+        input_MOD.setOnAction(this::getMOD);
+
+    }
+
+    private void getMOD(ActionEvent event) {
+        String myMOD = input_MOD.getValue();
+        this.myMOD=myMOD;
+    }
+
+    private void getFaculty(ActionEvent event) {
+        String myFaculty = input_faculty.getValue();
+        this.myFaculty=myFaculty;
+    }
+
+    private void getCourse(ActionEvent event) {
+        String myCourse = input_course.getValue();
+        if (myCourse.equals("Computer Science"))
+            this.myDuration=3;
+        else
+            this.myDuration=4;
+
+        this.myCourse=myCourse;
+    }
+
+    public void getLOS(ActionEvent event) {
+        String myLOS = input_LOS.getValue();
+        this.myLOS=myLOS;
+    }
+
+
+
+}
\ No newline at end of file
Index: .idea/codeStyles/codeStyleConfig.xml
===================================================================
diff --git a/.idea/codeStyles/codeStyleConfig.xml b/.idea/codeStyles/codeStyleConfig.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/codeStyles/codeStyleConfig.xml	
@@ -0,0 +1,5 @@
+<component name="ProjectCodeStyleConfiguration">
+  <state>
+    <option name="PREFERRED_PROJECT_CODE_STYLE" value="Default" />
+  </state>
+</component>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	
+++ b/.idea/.gitignore	
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/encodings.xml
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/encodings.xml	
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/compiler.xml
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/compiler.xml	
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="CSP" target="17" />
+    </bytecodeTargetLevel>
+  </component>
+  <component name="JavacSettings">
+    <option name="ADDITIONAL_OPTIONS_OVERRIDE">
+      <module name="CSP" options="--add-exports java.base/sun.security.util=com.example.csp" />
+    </option>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/uiDesigner.xml	
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/modules.xml	
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/CSP.iml" filepath="$PROJECT_DIR$/CSP.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: src/main/java/com/example/csp/AdminAddCourseController.java
===================================================================
diff --git a/src/main/java/com/example/csp/AdminAddCourseController.java b/src/main/java/com/example/csp/AdminAddCourseController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/AdminAddCourseController.java	
@@ -0,0 +1,124 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.fxml.Initializable;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.ChoiceBox;
+import javafx.scene.control.Label;
+import javafx.scene.control.TextField;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+import java.net.URL;
+import java.util.ResourceBundle;
+
+public class AdminAddCourseController implements Initializable {
+    Label label_faculty_name;
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+    private String[] LOS = {
+            "Foundation",
+            "Diploma",
+            "Bachelor's Degree",
+            "Masters"
+    };
+    private String[] Grade = { "A", "B", "C", "D", "E", "F" };
+
+
+    @FXML
+    private TextField input_courseCode, input_courseName, req_foundation, req_diploma, req_degree;
+
+    @FXML
+    private ChoiceBox<String> input_LOS;
+    private ChoiceBox<String> req_stpm;
+    private ChoiceBox<String> req_alevel;
+    private String myLOS;
+    private String reqSTPM;
+
+    public void displayName(Admin admin) {
+        label_faculty_name.setText(admin.getUsername());
+    }
+
+    public void logOut(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("main_portal.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToAddCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_add_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToDeleteCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_delete_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToUpdateCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_update_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void switchToViewCourse(ActionEvent event) throws IOException {
+        Parent root = FXMLLoader.load(getClass().getResource("admin_view_course.fxml"));
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+    public void onAddCourse(ActionEvent event) throws IOException
+    {
+        String courseCode = input_courseCode.getText();
+        String courseName = input_courseName.getText();
+        String reqFoundation = req_foundation.getText();
+        String reqDiploma = req_diploma.getText();
+        String reqDegree = req_degree.getText();
+    }
+
+    @Override
+    public void initialize(URL arg0, ResourceBundle arg1) {
+
+        input_LOS.getItems().addAll(LOS);
+        input_LOS.setOnAction(this::getLOS);
+
+        req_stpm.getItems().addAll(Grade);
+        req_stpm.setOnAction(this::getSTPM);
+
+        req_alevel.getItems().addAll(Grade);
+        req_alevel.setOnAction(this::getAlevel);
+    }
+
+    public void getLOS(ActionEvent event) {
+        String myLOS = input_LOS.getValue();
+        this.myLOS=myLOS;
+    }
+
+    public void getSTPM(ActionEvent event) {
+        String reqSTPM = req_stpm.getValue();
+        this.reqSTPM=reqSTPM;
+    }
+
+    public void getAlevel(ActionEvent event) {
+        String reqAlevel = req_alevel.getValue();
+    }
+
+
+}
Index: src/main/java/com/example/csp/LoginController.java
===================================================================
diff --git a/src/main/java/com/example/csp/LoginController.java b/src/main/java/com/example/csp/LoginController.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/csp/LoginController.java	
@@ -0,0 +1,64 @@
+package com.example.csp;
+
+import javafx.event.ActionEvent;
+import javafx.fxml.FXML;
+import javafx.fxml.FXMLLoader;
+import javafx.scene.Node;
+import javafx.scene.Parent;
+import javafx.scene.Scene;
+import javafx.scene.control.TextField;
+import javafx.stage.Stage;
+
+import java.io.IOException;
+
+public class LoginController {
+
+    @FXML
+    private TextField input_username, input_password;
+    private Stage stage;
+    private Scene scene;
+    private Parent root;
+
+    public void onLoginClick(ActionEvent event) throws IOException {
+
+        String username = input_username.getText();
+
+        if (username.contains("Faculty"))
+        {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("admin_dashboard.fxml"));
+            root = loader.load();
+
+            AdminDashboardController adminDashboardController = loader.getController();
+            adminDashboardController.displayName(username);
+
+            stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
+            scene = new Scene(root);
+            stage.setScene(scene);
+            stage.show();
+        } else {
+            FXMLLoader loader = new FXMLLoader(getClass().getResource("stud_dashboard.fxml"));
+            root = loader.load();
+
+            StudDashboardController studDashboardController = loader.getController();
+            studDashboardController.displayNameDashboard(username);
+
+            stage = (Stage) ((Node) event.getSource()).getScene().getWindow();
+            scene = new Scene(root);
+            stage.setScene(scene);
+            stage.show();
+        }
+
+    }
+
+    public void onRegisterClick(ActionEvent event) throws IOException {
+
+        FXMLLoader loader = new FXMLLoader(getClass().getResource("register.fxml"));
+        root = loader.load();
+        stage = (Stage)((Node)event.getSource()).getScene().getWindow();
+        scene = new Scene(root);
+        stage.setScene(scene);
+        stage.show();
+    }
+
+
+}
diff --git a/src_2/output.txt b/src_2/output.txt
deleted file mode 100644
